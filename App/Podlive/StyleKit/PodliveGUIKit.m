//
//  PodliveGUIKit.m
//  Podlive
//
//  Created by Frank Gregor on 14/06/2017.
//  Copyright Â© 2017 cocoa:naut. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//

#import "PodliveGUIKit.h"


@implementation PodliveGUIKit

#pragma mark Initialization

+ (void)initialize
{
}

#pragma mark Drawing Methods

+ (void)drawProgressBarWithFrame: (NSRect)frame color: (NSColor*)color progressBarActiveColor: (NSColor*)progressBarActiveColor progress: (CGFloat)progress
{

    //// Progress Active Drawing
    NSBezierPath* progressActivePath = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(2, 2, progress, 6) xRadius: 3 yRadius: 3];
    [progressBarActiveColor setFill];
    [progressActivePath fill];


    //// Progress Border Drawing
    NSBezierPath* progressBorderPath = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(NSMinX(frame) + 1, NSMinY(frame) + 1, frame.size.width - 2, frame.size.height - 2) xRadius: 4 yRadius: 4];
    [color setStroke];
    progressBorderPath.lineWidth = 0.5;
    progressBorderPath.lineCapStyle = NSRoundLineCapStyle;
    progressBorderPath.lineJoinStyle = NSRoundLineJoinStyle;
    [progressBorderPath stroke];
}

+ (void)drawPlayerButtonWithFrame: (NSRect)frame color: (NSColor*)color radius: (CGFloat)radius borderWidth: (CGFloat)borderWidth
{

    //// Border Drawing
    NSBezierPath* borderPath = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(NSMinX(frame) + 2, NSMinY(frame) + 2, frame.size.width - 4, frame.size.height - 4) xRadius: radius yRadius: radius];
    [color setStroke];
    borderPath.lineWidth = borderWidth;
    borderPath.lineCapStyle = NSRoundLineCapStyle;
    borderPath.lineJoinStyle = NSRoundLineJoinStyle;
    [borderPath stroke];
}

+ (void)drawPlayButtonWithColor: (NSColor*)color radius: (CGFloat)radius borderWidth: (CGFloat)borderWidth
{
    [PodliveGUIKit drawPlayButtonWithFrame: NSMakeRect(0, 0, 32, 32) resizing: PodliveGUIKitResizingBehaviorAspectFit color: color radius: radius borderWidth: borderWidth];
}

+ (void)drawPlayButtonWithFrame: (NSRect)targetFrame resizing: (PodliveGUIKitResizingBehavior)resizing color: (NSColor*)color radius: (CGFloat)radius borderWidth: (CGFloat)borderWidth
{
    //// General Declarations
    CGContextRef context = NSGraphicsContext.currentContext.CGContext;
    
    //// Resize to Target Frame
    [NSGraphicsContext saveGraphicsState];
    NSRect resizedFrame = PodliveGUIKitResizingBehaviorApply(resizing, NSMakeRect(0, 0, 32, 32), targetFrame);
    CGContextTranslateCTM(context, resizedFrame.origin.x, resizedFrame.origin.y);
    CGContextScaleCTM(context, resizedFrame.size.width / 32, resizedFrame.size.height / 32);


    //// Symbol Drawing
    NSRect symbolRect = NSMakeRect(0, 0, 32, 32);
    [NSGraphicsContext saveGraphicsState];
    NSRectClip(symbolRect);
    CGContextTranslateCTM(context, symbolRect.origin.x, symbolRect.origin.y);

    [PodliveGUIKit drawPlayerButtonWithFrame: NSMakeRect(0, 0, symbolRect.size.width, symbolRect.size.height) color: color radius: radius borderWidth: borderWidth];
    [NSGraphicsContext restoreGraphicsState];


    //// Group
    {
        //// Triangle Drawing
        NSBezierPath* trianglePath = [NSBezierPath bezierPath];
        [trianglePath moveToPoint: NSMakePoint(23.66, 16.59)];
        [trianglePath lineToPoint: NSMakePoint(12.58, 22.91)];
        [trianglePath curveToPoint: NSMakePoint(11.56, 22.32) controlPoint1: NSMakePoint(12.12, 23.17) controlPoint2: NSMakePoint(11.56, 22.84)];
        [trianglePath lineToPoint: NSMakePoint(11.56, 9.68)];
        [trianglePath curveToPoint: NSMakePoint(12.58, 9.09) controlPoint1: NSMakePoint(11.56, 9.16) controlPoint2: NSMakePoint(12.12, 8.83)];
        [trianglePath lineToPoint: NSMakePoint(23.66, 15.41)];
        [trianglePath curveToPoint: NSMakePoint(23.66, 16.59) controlPoint1: NSMakePoint(24.11, 15.68) controlPoint2: NSMakePoint(24.11, 16.33)];
        [trianglePath closePath];
        [color setFill];
        [trianglePath fill];
    }
    
    [NSGraphicsContext restoreGraphicsState];

}

+ (void)drawStopButtonWithColor: (NSColor*)color radius: (CGFloat)radius borderWidth: (CGFloat)borderWidth
{
    [PodliveGUIKit drawStopButtonWithFrame: NSMakeRect(0, 0, 32, 32) resizing: PodliveGUIKitResizingBehaviorAspectFit color: color radius: radius borderWidth: borderWidth];
}

+ (void)drawStopButtonWithFrame: (NSRect)targetFrame resizing: (PodliveGUIKitResizingBehavior)resizing color: (NSColor*)color radius: (CGFloat)radius borderWidth: (CGFloat)borderWidth
{
    //// General Declarations
    CGContextRef context = NSGraphicsContext.currentContext.CGContext;
    
    //// Resize to Target Frame
    [NSGraphicsContext saveGraphicsState];
    NSRect resizedFrame = PodliveGUIKitResizingBehaviorApply(resizing, NSMakeRect(0, 0, 32, 32), targetFrame);
    CGContextTranslateCTM(context, resizedFrame.origin.x, resizedFrame.origin.y);
    CGContextScaleCTM(context, resizedFrame.size.width / 32, resizedFrame.size.height / 32);


    //// Symbol Drawing
    NSRect symbolRect = NSMakeRect(0, 0, 32, 32);
    [NSGraphicsContext saveGraphicsState];
    NSRectClip(symbolRect);
    CGContextTranslateCTM(context, symbolRect.origin.x, symbolRect.origin.y);

    [PodliveGUIKit drawPlayerButtonWithFrame: NSMakeRect(0, 0, symbolRect.size.width, symbolRect.size.height) color: color radius: radius borderWidth: borderWidth];
    [NSGraphicsContext restoreGraphicsState];


    //// Stop Icon Drawing
    NSBezierPath* stopIconPath = [NSBezierPath bezierPathWithRoundedRect: NSMakeRect(10, 10, 12, 12) xRadius: 1.5 yRadius: 1.5];
    [color setFill];
    [stopIconPath fill];
    
    [NSGraphicsContext restoreGraphicsState];

}

+ (void)drawPauseButtonWithColor: (NSColor*)color radius: (CGFloat)radius borderWidth: (CGFloat)borderWidth
{
    [PodliveGUIKit drawPauseButtonWithFrame: NSMakeRect(0, 0, 32, 32) resizing: PodliveGUIKitResizingBehaviorAspectFit color: color radius: radius borderWidth: borderWidth];
}

+ (void)drawPauseButtonWithFrame: (NSRect)targetFrame resizing: (PodliveGUIKitResizingBehavior)resizing color: (NSColor*)color radius: (CGFloat)radius borderWidth: (CGFloat)borderWidth
{
    //// General Declarations
    CGContextRef context = NSGraphicsContext.currentContext.CGContext;
    
    //// Resize to Target Frame
    [NSGraphicsContext saveGraphicsState];
    NSRect resizedFrame = PodliveGUIKitResizingBehaviorApply(resizing, NSMakeRect(0, 0, 32, 32), targetFrame);
    CGContextTranslateCTM(context, resizedFrame.origin.x, resizedFrame.origin.y);
    CGContextScaleCTM(context, resizedFrame.size.width / 32, resizedFrame.size.height / 32);


    //// Symbol Drawing
    NSRect symbolRect = NSMakeRect(0, 0, 32, 32);
    [NSGraphicsContext saveGraphicsState];
    NSRectClip(symbolRect);
    CGContextTranslateCTM(context, symbolRect.origin.x, symbolRect.origin.y);

    [PodliveGUIKit drawPlayerButtonWithFrame: NSMakeRect(0, 0, symbolRect.size.width, symbolRect.size.height) color: color radius: radius borderWidth: borderWidth];
    [NSGraphicsContext restoreGraphicsState];


    //// Group 3
    {
        //// Group 2
        {
            //// Pause Icon Drawing
            NSBezierPath* pauseIconPath = [NSBezierPath bezierPath];
            [pauseIconPath moveToPoint: NSMakePoint(18, 10.31)];
            [pauseIconPath curveToPoint: NSMakePoint(19.5, 9) controlPoint1: NSMakePoint(18, 9.59) controlPoint2: NSMakePoint(18.67, 9)];
            [pauseIconPath lineToPoint: NSMakePoint(19.5, 9)];
            [pauseIconPath curveToPoint: NSMakePoint(21, 10.31) controlPoint1: NSMakePoint(20.33, 9) controlPoint2: NSMakePoint(21, 9.59)];
            [pauseIconPath lineToPoint: NSMakePoint(21, 21.69)];
            [pauseIconPath curveToPoint: NSMakePoint(19.5, 23) controlPoint1: NSMakePoint(21, 22.41) controlPoint2: NSMakePoint(20.33, 23)];
            [pauseIconPath lineToPoint: NSMakePoint(19.5, 23)];
            [pauseIconPath curveToPoint: NSMakePoint(18, 21.69) controlPoint1: NSMakePoint(18.67, 23) controlPoint2: NSMakePoint(18, 22.41)];
            [pauseIconPath lineToPoint: NSMakePoint(18, 10.31)];
            [pauseIconPath closePath];
            [color setFill];
            [pauseIconPath fill];
        }


        //// Group
        {
            //// Pause Icon 2 Drawing
            NSBezierPath* pauseIcon2Path = [NSBezierPath bezierPath];
            [pauseIcon2Path moveToPoint: NSMakePoint(11, 10.31)];
            [pauseIcon2Path curveToPoint: NSMakePoint(12.5, 9) controlPoint1: NSMakePoint(11, 9.59) controlPoint2: NSMakePoint(11.67, 9)];
            [pauseIcon2Path lineToPoint: NSMakePoint(12.5, 9)];
            [pauseIcon2Path curveToPoint: NSMakePoint(14, 10.31) controlPoint1: NSMakePoint(13.33, 9) controlPoint2: NSMakePoint(14, 9.59)];
            [pauseIcon2Path lineToPoint: NSMakePoint(14, 21.69)];
            [pauseIcon2Path curveToPoint: NSMakePoint(12.5, 23) controlPoint1: NSMakePoint(14, 22.41) controlPoint2: NSMakePoint(13.33, 23)];
            [pauseIcon2Path lineToPoint: NSMakePoint(12.5, 23)];
            [pauseIcon2Path curveToPoint: NSMakePoint(11, 21.69) controlPoint1: NSMakePoint(11.67, 23) controlPoint2: NSMakePoint(11, 22.41)];
            [pauseIcon2Path lineToPoint: NSMakePoint(11, 10.31)];
            [pauseIcon2Path closePath];
            [color setFill];
            [pauseIcon2Path fill];
        }
    }
    
    [NSGraphicsContext restoreGraphicsState];

}

+ (void)drawPlayerListenerWithFrame: (NSRect)frame color: (NSColor*)color
{

    //// Headphone Drawing
    NSBezierPath* headphonePath = [NSBezierPath bezierPath];
    [headphonePath moveToPoint: NSMakePoint(NSMinX(frame) + 16.82, NSMaxY(frame) - 2.93)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 10, NSMaxY(frame) - 0.02) controlPoint1: NSMakePoint(NSMinX(frame) + 15, NSMaxY(frame) - 1.05) controlPoint2: NSMakePoint(NSMinX(frame) + 12.58, NSMaxY(frame) - 0.02)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 3.18, NSMaxY(frame) - 2.93) controlPoint1: NSMakePoint(NSMinX(frame) + 7.42, NSMaxY(frame) - 0.02) controlPoint2: NSMakePoint(NSMinX(frame) + 5, NSMaxY(frame) - 1.05)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 1.72, NSMaxY(frame) - 4.85) controlPoint1: NSMakePoint(NSMinX(frame) + 2.62, NSMaxY(frame) - 3.51) controlPoint2: NSMakePoint(NSMinX(frame) + 2.13, NSMaxY(frame) - 4.15)];
    [headphonePath lineToPoint: NSMakePoint(NSMinX(frame) + 4.52, NSMaxY(frame) - 6.04)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 6.25, NSMaxY(frame) - 4.27) controlPoint1: NSMakePoint(NSMinX(frame) + 4.98, NSMaxY(frame) - 5.35) controlPoint2: NSMakePoint(NSMinX(frame) + 5.56, NSMaxY(frame) - 4.75)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 10, NSMaxY(frame) - 3.08) controlPoint1: NSMakePoint(NSMinX(frame) + 7.36, NSMaxY(frame) - 3.49) controlPoint2: NSMakePoint(NSMinX(frame) + 8.66, NSMaxY(frame) - 3.08)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 13.75, NSMaxY(frame) - 4.27) controlPoint1: NSMakePoint(NSMinX(frame) + 11.34, NSMaxY(frame) - 3.08) controlPoint2: NSMakePoint(NSMinX(frame) + 12.64, NSMaxY(frame) - 3.49)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 15.48, NSMaxY(frame) - 6.04) controlPoint1: NSMakePoint(NSMinX(frame) + 14.44, NSMaxY(frame) - 4.75) controlPoint2: NSMakePoint(NSMinX(frame) + 15.02, NSMaxY(frame) - 5.35)];
    [headphonePath lineToPoint: NSMakePoint(NSMinX(frame) + 18.28, NSMaxY(frame) - 4.85)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 16.82, NSMaxY(frame) - 2.93) controlPoint1: NSMakePoint(NSMinX(frame) + 17.87, NSMaxY(frame) - 4.15) controlPoint2: NSMakePoint(NSMinX(frame) + 17.38, NSMaxY(frame) - 3.51)];
    [headphonePath closePath];
    [headphonePath moveToPoint: NSMakePoint(NSMinX(frame) + 18.75, NSMaxY(frame) - 12.7)];
    [headphonePath lineToPoint: NSMakePoint(NSMinX(frame) + 18.75, NSMaxY(frame) - 9.96)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 18, NSMaxY(frame) - 6.29) controlPoint1: NSMakePoint(NSMinX(frame) + 18.75, NSMaxY(frame) - 8.69) controlPoint2: NSMakePoint(NSMinX(frame) + 18.49, NSMaxY(frame) - 7.44)];
    [headphonePath lineToPoint: NSMakePoint(NSMinX(frame) + 16.9, NSMaxY(frame) - 6.76)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 17.56, NSMaxY(frame) - 9.96) controlPoint1: NSMakePoint(NSMinX(frame) + 17.34, NSMaxY(frame) - 7.76) controlPoint2: NSMakePoint(NSMinX(frame) + 17.56, NSMaxY(frame) - 8.85)];
    [headphonePath lineToPoint: NSMakePoint(NSMinX(frame) + 17.56, NSMaxY(frame) - 12.24)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 17.19, NSMaxY(frame) - 12.21) controlPoint1: NSMakePoint(NSMinX(frame) + 17.44, NSMaxY(frame) - 12.22) controlPoint2: NSMakePoint(NSMinX(frame) + 17.32, NSMaxY(frame) - 12.21)];
    [headphonePath lineToPoint: NSMakePoint(NSMinX(frame) + 16.71, NSMaxY(frame) - 12.21)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 14.63, NSMaxY(frame) - 10.23) controlPoint1: NSMakePoint(NSMinX(frame) + 16.62, NSMaxY(frame) - 11.1) controlPoint2: NSMakePoint(NSMinX(frame) + 15.72, NSMaxY(frame) - 10.23)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 12.54, NSMaxY(frame) - 12.38) controlPoint1: NSMakePoint(NSMinX(frame) + 13.48, NSMaxY(frame) - 10.23) controlPoint2: NSMakePoint(NSMinX(frame) + 12.54, NSMaxY(frame) - 11.19)];
    [headphonePath lineToPoint: NSMakePoint(NSMinX(frame) + 12.54, NSMaxY(frame) - 17.83)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 14.63, NSMaxY(frame) - 19.98) controlPoint1: NSMakePoint(NSMinX(frame) + 12.54, NSMaxY(frame) - 19.02) controlPoint2: NSMakePoint(NSMinX(frame) + 13.48, NSMaxY(frame) - 19.98)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 16.71, NSMaxY(frame) - 18) controlPoint1: NSMakePoint(NSMinX(frame) + 15.72, NSMaxY(frame) - 19.98) controlPoint2: NSMakePoint(NSMinX(frame) + 16.62, NSMaxY(frame) - 19.11)];
    [headphonePath lineToPoint: NSMakePoint(NSMinX(frame) + 17.19, NSMaxY(frame) - 18)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 20, NSMaxY(frame) - 15.11) controlPoint1: NSMakePoint(NSMinX(frame) + 18.74, NSMaxY(frame) - 18) controlPoint2: NSMakePoint(NSMinX(frame) + 20, NSMaxY(frame) - 16.7)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 18.75, NSMaxY(frame) - 12.7) controlPoint1: NSMakePoint(NSMinX(frame) + 20, NSMaxY(frame) - 14.1) controlPoint2: NSMakePoint(NSMinX(frame) + 19.5, NSMaxY(frame) - 13.22)];
    [headphonePath closePath];
    [headphonePath moveToPoint: NSMakePoint(NSMinX(frame) + 5.37, NSMaxY(frame) - 10.23)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 3.29, NSMaxY(frame) - 12.21) controlPoint1: NSMakePoint(NSMinX(frame) + 4.28, NSMaxY(frame) - 10.23) controlPoint2: NSMakePoint(NSMinX(frame) + 3.38, NSMaxY(frame) - 11.1)];
    [headphonePath lineToPoint: NSMakePoint(NSMinX(frame) + 2.81, NSMaxY(frame) - 12.21)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 2.44, NSMaxY(frame) - 12.24) controlPoint1: NSMakePoint(NSMinX(frame) + 2.68, NSMaxY(frame) - 12.21) controlPoint2: NSMakePoint(NSMinX(frame) + 2.56, NSMaxY(frame) - 12.22)];
    [headphonePath lineToPoint: NSMakePoint(NSMinX(frame) + 2.44, NSMaxY(frame) - 9.96)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 3.1, NSMaxY(frame) - 6.76) controlPoint1: NSMakePoint(NSMinX(frame) + 2.44, NSMaxY(frame) - 8.85) controlPoint2: NSMakePoint(NSMinX(frame) + 2.66, NSMaxY(frame) - 7.76)];
    [headphonePath lineToPoint: NSMakePoint(NSMinX(frame) + 2, NSMaxY(frame) - 6.29)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 1.25, NSMaxY(frame) - 9.96) controlPoint1: NSMakePoint(NSMinX(frame) + 1.51, NSMaxY(frame) - 7.44) controlPoint2: NSMakePoint(NSMinX(frame) + 1.25, NSMaxY(frame) - 8.69)];
    [headphonePath lineToPoint: NSMakePoint(NSMinX(frame) + 1.25, NSMaxY(frame) - 12.7)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame), NSMaxY(frame) - 15.11) controlPoint1: NSMakePoint(NSMinX(frame) + 0.5, NSMaxY(frame) - 13.22) controlPoint2: NSMakePoint(NSMinX(frame), NSMaxY(frame) - 14.1)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 2.81, NSMaxY(frame) - 18) controlPoint1: NSMakePoint(NSMinX(frame), NSMaxY(frame) - 16.7) controlPoint2: NSMakePoint(NSMinX(frame) + 1.26, NSMaxY(frame) - 18)];
    [headphonePath lineToPoint: NSMakePoint(NSMinX(frame) + 3.29, NSMaxY(frame) - 18)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 5.37, NSMaxY(frame) - 19.98) controlPoint1: NSMakePoint(NSMinX(frame) + 3.38, NSMaxY(frame) - 19.11) controlPoint2: NSMakePoint(NSMinX(frame) + 4.28, NSMaxY(frame) - 19.98)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 7.46, NSMaxY(frame) - 17.83) controlPoint1: NSMakePoint(NSMinX(frame) + 6.52, NSMaxY(frame) - 19.98) controlPoint2: NSMakePoint(NSMinX(frame) + 7.46, NSMaxY(frame) - 19.02)];
    [headphonePath lineToPoint: NSMakePoint(NSMinX(frame) + 7.46, NSMaxY(frame) - 12.38)];
    [headphonePath curveToPoint: NSMakePoint(NSMinX(frame) + 5.37, NSMaxY(frame) - 10.23) controlPoint1: NSMakePoint(NSMinX(frame) + 7.46, NSMaxY(frame) - 11.19) controlPoint2: NSMakePoint(NSMinX(frame) + 6.52, NSMaxY(frame) - 10.23)];
    [headphonePath closePath];
    [color setFill];
    [headphonePath fill];
}

+ (void)drawPlayerTimerClockWithFrame: (NSRect)frame color: (NSColor*)color
{

    //// Clock Drawing
    NSBezierPath* clockPath = [NSBezierPath bezierPath];
    [clockPath moveToPoint: NSMakePoint(NSMinX(frame) + 10, NSMaxY(frame))];
    [clockPath curveToPoint: NSMakePoint(NSMinX(frame), NSMaxY(frame) - 10) controlPoint1: NSMakePoint(NSMinX(frame) + 4.49, NSMaxY(frame)) controlPoint2: NSMakePoint(NSMinX(frame), NSMaxY(frame) - 4.49)];
    [clockPath curveToPoint: NSMakePoint(NSMinX(frame) + 10, NSMaxY(frame) - 20) controlPoint1: NSMakePoint(NSMinX(frame), NSMaxY(frame) - 15.51) controlPoint2: NSMakePoint(NSMinX(frame) + 4.49, NSMaxY(frame) - 20)];
    [clockPath curveToPoint: NSMakePoint(NSMinX(frame) + 20, NSMaxY(frame) - 10) controlPoint1: NSMakePoint(NSMinX(frame) + 15.51, NSMaxY(frame) - 20) controlPoint2: NSMakePoint(NSMinX(frame) + 20, NSMaxY(frame) - 15.51)];
    [clockPath curveToPoint: NSMakePoint(NSMinX(frame) + 10, NSMaxY(frame)) controlPoint1: NSMakePoint(NSMinX(frame) + 20, NSMaxY(frame) - 4.49) controlPoint2: NSMakePoint(NSMinX(frame) + 15.51, NSMaxY(frame))];
    [clockPath closePath];
    [clockPath moveToPoint: NSMakePoint(NSMinX(frame) + 10, NSMaxY(frame) - 17.87)];
    [clockPath curveToPoint: NSMakePoint(NSMinX(frame) + 2.13, NSMaxY(frame) - 10) controlPoint1: NSMakePoint(NSMinX(frame) + 5.66, NSMaxY(frame) - 17.87) controlPoint2: NSMakePoint(NSMinX(frame) + 2.13, NSMaxY(frame) - 14.34)];
    [clockPath curveToPoint: NSMakePoint(NSMinX(frame) + 10, NSMaxY(frame) - 2.13) controlPoint1: NSMakePoint(NSMinX(frame) + 2.13, NSMaxY(frame) - 5.66) controlPoint2: NSMakePoint(NSMinX(frame) + 5.66, NSMaxY(frame) - 2.13)];
    [clockPath curveToPoint: NSMakePoint(NSMinX(frame) + 17.87, NSMaxY(frame) - 10) controlPoint1: NSMakePoint(NSMinX(frame) + 14.34, NSMaxY(frame) - 2.13) controlPoint2: NSMakePoint(NSMinX(frame) + 17.87, NSMaxY(frame) - 5.66)];
    [clockPath curveToPoint: NSMakePoint(NSMinX(frame) + 10, NSMaxY(frame) - 17.87) controlPoint1: NSMakePoint(NSMinX(frame) + 17.87, NSMaxY(frame) - 14.34) controlPoint2: NSMakePoint(NSMinX(frame) + 14.34, NSMaxY(frame) - 17.87)];
    [clockPath closePath];
    [clockPath moveToPoint: NSMakePoint(NSMinX(frame) + 15.21, NSMaxY(frame) - 9.69)];
    [clockPath lineToPoint: NSMakePoint(NSMinX(frame) + 10.72, NSMaxY(frame) - 9.69)];
    [clockPath lineToPoint: NSMakePoint(NSMinX(frame) + 10.72, NSMaxY(frame) - 4.29)];
    [clockPath curveToPoint: NSMakePoint(NSMinX(frame) + 9.89, NSMaxY(frame) - 3.46) controlPoint1: NSMakePoint(NSMinX(frame) + 10.72, NSMaxY(frame) - 3.83) controlPoint2: NSMakePoint(NSMinX(frame) + 10.35, NSMaxY(frame) - 3.46)];
    [clockPath curveToPoint: NSMakePoint(NSMinX(frame) + 9.07, NSMaxY(frame) - 4.29) controlPoint1: NSMakePoint(NSMinX(frame) + 9.44, NSMaxY(frame) - 3.46) controlPoint2: NSMakePoint(NSMinX(frame) + 9.07, NSMaxY(frame) - 3.83)];
    [clockPath lineToPoint: NSMakePoint(NSMinX(frame) + 9.07, NSMaxY(frame) - 10.51)];
    [clockPath curveToPoint: NSMakePoint(NSMinX(frame) + 9.89, NSMaxY(frame) - 11.34) controlPoint1: NSMakePoint(NSMinX(frame) + 9.07, NSMaxY(frame) - 10.97) controlPoint2: NSMakePoint(NSMinX(frame) + 9.44, NSMaxY(frame) - 11.34)];
    [clockPath lineToPoint: NSMakePoint(NSMinX(frame) + 15.21, NSMaxY(frame) - 11.34)];
    [clockPath curveToPoint: NSMakePoint(NSMinX(frame) + 16.03, NSMaxY(frame) - 10.51) controlPoint1: NSMakePoint(NSMinX(frame) + 15.67, NSMaxY(frame) - 11.34) controlPoint2: NSMakePoint(NSMinX(frame) + 16.03, NSMaxY(frame) - 10.97)];
    [clockPath curveToPoint: NSMakePoint(NSMinX(frame) + 15.21, NSMaxY(frame) - 9.69) controlPoint1: NSMakePoint(NSMinX(frame) + 16.03, NSMaxY(frame) - 10.06) controlPoint2: NSMakePoint(NSMinX(frame) + 15.67, NSMaxY(frame) - 9.69)];
    [clockPath closePath];
    [color setFill];
    [clockPath fill];
}

+ (void)drawAnonymousAvatarWithFrame: (NSRect)frame color: (NSColor*)color
{

    //// anonymous Drawing
    NSBezierPath* anonymousPath = [NSBezierPath bezierPath];
    [anonymousPath moveToPoint: NSMakePoint(17.47, 4.01)];
    [anonymousPath curveToPoint: NSMakePoint(11.33, 6.28) controlPoint1: NSMakePoint(15.82, 5.47) controlPoint2: NSMakePoint(13.64, 6.28)];
    [anonymousPath lineToPoint: NSMakePoint(8.67, 6.28)];
    [anonymousPath curveToPoint: NSMakePoint(2.53, 4.01) controlPoint1: NSMakePoint(6.36, 6.28) controlPoint2: NSMakePoint(4.18, 5.47)];
    [anonymousPath curveToPoint: NSMakePoint(0, -1.41) controlPoint1: NSMakePoint(0.9, 2.55) controlPoint2: NSMakePoint(0, 0.62)];
    [anonymousPath curveToPoint: NSMakePoint(0.67, -2) controlPoint1: NSMakePoint(0, -1.74) controlPoint2: NSMakePoint(0.3, -2)];
    [anonymousPath lineToPoint: NSMakePoint(19.33, -2)];
    [anonymousPath curveToPoint: NSMakePoint(20, -1.41) controlPoint1: NSMakePoint(19.7, -2) controlPoint2: NSMakePoint(20, -1.74)];
    [anonymousPath curveToPoint: NSMakePoint(17.47, 4.01) controlPoint1: NSMakePoint(20, 0.62) controlPoint2: NSMakePoint(19.1, 2.55)];
    [anonymousPath closePath];
    [anonymousPath moveToPoint: NSMakePoint(16.01, 12.73)];
    [anonymousPath curveToPoint: NSMakePoint(10, 7.46) controlPoint1: NSMakePoint(16.01, 9.82) controlPoint2: NSMakePoint(13.32, 7.46)];
    [anonymousPath curveToPoint: NSMakePoint(4, 12.73) controlPoint1: NSMakePoint(6.69, 7.46) controlPoint2: NSMakePoint(4, 9.82)];
    [anonymousPath curveToPoint: NSMakePoint(10, 18) controlPoint1: NSMakePoint(4, 15.64) controlPoint2: NSMakePoint(6.69, 18)];
    [anonymousPath curveToPoint: NSMakePoint(16.01, 12.73) controlPoint1: NSMakePoint(13.32, 18) controlPoint2: NSMakePoint(16.01, 15.64)];
    [anonymousPath closePath];
    [color setFill];
    [anonymousPath fill];
}

#pragma mark Generated Images

+ (NSImage*)imageOfPlayButtonWithColor: (NSColor*)color radius: (CGFloat)radius borderWidth: (CGFloat)borderWidth
{
    return [NSImage imageWithSize: NSMakeSize(32, 32) flipped: NO drawingHandler: ^(__unused NSRect dstRect)
    {
        [PodliveGUIKit drawPlayButtonWithColor: color radius: radius borderWidth: borderWidth];

        return YES;
    }];
}

+ (NSImage*)imageOfStopButtonWithColor: (NSColor*)color radius: (CGFloat)radius borderWidth: (CGFloat)borderWidth
{
    return [NSImage imageWithSize: NSMakeSize(32, 32) flipped: NO drawingHandler: ^(__unused NSRect dstRect)
    {
        [PodliveGUIKit drawStopButtonWithColor: color radius: radius borderWidth: borderWidth];

        return YES;
    }];
}

+ (NSImage*)imageOfPauseButtonWithColor: (NSColor*)color radius: (CGFloat)radius borderWidth: (CGFloat)borderWidth
{
    return [NSImage imageWithSize: NSMakeSize(32, 32) flipped: NO drawingHandler: ^(__unused NSRect dstRect)
    {
        [PodliveGUIKit drawPauseButtonWithColor: color radius: radius borderWidth: borderWidth];

        return YES;
    }];
}

+ (NSImage*)imageOfPlayerListenerWithSize: (NSSize)imageSize color: (NSColor*)color
{
    return [NSImage imageWithSize: imageSize flipped: NO drawingHandler: ^(__unused NSRect dstRect)
    {
        [PodliveGUIKit drawPlayerListenerWithFrame: NSMakeRect(0, 0, imageSize.width, imageSize.height) color: color];

        return YES;
    }];
}

+ (NSImage*)imageOfPlayerTimerClockWithSize: (NSSize)imageSize color: (NSColor*)color
{
    return [NSImage imageWithSize: imageSize flipped: NO drawingHandler: ^(__unused NSRect dstRect)
    {
        [PodliveGUIKit drawPlayerTimerClockWithFrame: NSMakeRect(0, 0, imageSize.width, imageSize.height) color: color];

        return YES;
    }];
}

+ (NSImage*)imageOfAnonymousAvatarWithSize: (NSSize)imageSize color: (NSColor*)color
{
    return [NSImage imageWithSize: imageSize flipped: NO drawingHandler: ^(__unused NSRect dstRect)
    {
        [PodliveGUIKit drawAnonymousAvatarWithFrame: NSMakeRect(0, 0, imageSize.width, imageSize.height) color: color];

        return YES;
    }];
}

@end



NSRect PodliveGUIKitResizingBehaviorApply(PodliveGUIKitResizingBehavior behavior, NSRect rect, NSRect target)
{
    if (NSEqualRects(rect, target) || NSEqualRects(target, NSZeroRect))
        return rect;

    NSSize scales = NSZeroSize;
    scales.width = ABS(target.size.width / rect.size.width);
    scales.height = ABS(target.size.height / rect.size.height);

    switch (behavior)
    {
        case PodliveGUIKitResizingBehaviorAspectFit:
        {
            scales.width = MIN(scales.width, scales.height);
            scales.height = scales.width;
            break;
        }
        case PodliveGUIKitResizingBehaviorAspectFill:
        {
            scales.width = MAX(scales.width, scales.height);
            scales.height = scales.width;
            break;
        }
        case PodliveGUIKitResizingBehaviorStretch:
            break;
        case PodliveGUIKitResizingBehaviorCenter:
        {
            scales.width = 1;
            scales.height = 1;
            break;
        }
    }

    NSRect result = CGRectStandardize(rect);
    result.size.width *= scales.width;
    result.size.height *= scales.height;
    result.origin.x = target.origin.x + (target.size.width - result.size.width) / 2;
    result.origin.y = target.origin.y + (target.size.height - result.size.height) / 2;
    return result;
}
